---
author: jeffatwood
comments: true
date: 2009-04-23 03:14:15+00:00
layout: post
redirect_from: /2009/04/podcast-50
hero: /images/category/podcasts.jpg
slug: podcast-50
title: 'Podcast #50'
wordpress_id: 1108
tags:
- company
- podcasts
podcast: http://www.podtrac.com/pts/redirect.mp3/feeds.soundcloud.com/stream/14377371-stack-exchange-stack-overflow-podcast-28.mp3
---


This is the 50th episode of the StackOverflow podcast, where Joel and Jeff sit down with Steve Yegge of Google and the most excellent [Stevey's Blog Rants](http://steve-yegge.blogspot.com/).






  * This episode was recorded on site at the Kirkland, Washington Google office, where Joel gave a talk earlier in the day.


  * A brief discussion about the [APL](http://en.wikipedia.org/wiki/APL_(programming_language)) language, whose keywords are symbols. Imagine how challenging it would be to program in a language where you need a special keyboard. There's a more popular (not sure "popular" is the right word) version of APL named [J](http://en.wikipedia.org/wiki/J_(programming_language)) which drops the symbols in favor of plain ASCII.


  * How big a fan of working at Google is Steve? He worries that new hires from college will expect the rest of their working life to be as good as their Google experience.


  * Steve can finally talk about what he was working on, which he was so vague about on [our previous podcast with him](http://blog.stackoverflow.com/2008/10/podcast-25/). Mostly, he was disturbed at the state of JavaScript tooling at Google -- "dude, you spelled it fuction again."


  * The state of the art in tools means painstakingly adding support for each individual language into each individual editor. What if there was a way to plug first-class language intellisense / compilation functionality into _any_ editor -- in a generalized way? That's the problem Steve set out to solve.


  * Take compilers that are defined for IDEs -- Eclipse has three Java compilers built into it -- a fast inaccurate one as you type, a better batch one, and then a great big one that does exhaustive analysis on large trees (Steve says Eclipse has "a better Java compiler than the Java compiler".) This is all necessary to get good editor support! Why not take these compilers and run them on the google infrastructure, so they are commoditized and available to any editor?


  * Steve says the way tools and languages integrate today is utterly backwards. Languages should support the tools, rather than the other way around. "We should have been doing this for 20 years!"  



  * [Prototype](http://www.prototypejs.org/) doesn't play well with the JavaScript compiler at Google, partly because nobody has actually tried to compile the code before! It exposes some problems that weren't immediately obvious. All the common JavaScript frameworks require some tweaking for the JavaScript compilation process.


  * Steve likens the comparison between compilation and dynamic typing to taking a shower and brushing your teeth. You should do both! The only reason we _can't_ do both of these things is because, as Steve points out, our tooling currently sucks.  



  * JavaScript has a more interesting origin than I realized -- it was [originally based on Scheme](http://en.wikipedia.org/wiki/JavaScript).


  * Per Steve, Scala is like Haskell but with more concessions to real world programming. He points out that the great thing about Java is the fantastic tooling, which means it's ultimately a better programming experience than a theoretically "superior" programming language.


  * Joel doesn't hate Unix; FogBugz supports Unix (although that support tends to be complex and costly) and Joel regularly runs [cygwin](http://www.cygwin.com/) on his laptop. That said, modern Unixes have their faults too. Steve observes that the only way to determine what packages are installed on Ubuntu is to diff the dpackage output against a clean machine. Also, Firefox is very slow on Linux relative to Mac and Windows.


  * Stack Overflow is for programming related questions, but defining programming related isn't easy. There will [always be a gray area](http://blog.stackoverflow.com/2009/04/the-stack-overflow-question-lifecycle/), which is further complicated by the fact that we do want the _occasional _fun questions -- we just don't want the system overrun with the stuff.


  * Steve points out that even Amazon has examples of "fun" product reviews that wouldn't normally be permitted, such as [On Amazon, All of a Sudden Everyone's a Milk Critic](http://www.nytimes.com/2006/08/09/technology/09milk.html?ex=1312776000&en=83840f92baf3863d&ei=5090&partner=rssuserland&emc=rss&pagewanted=all) and [The Story About Ping](http://www.amazon.com/Story-About-Ping-Marjorie-Flack/dp/0140502416).  





We answered the following listener questions on this podcast:






  1. "What is Joel's history with Unix? He mentions Unix a lot in vaguely pejorative ways. Did he have a bad early Unix experience?" No, Steve, the caller did not say "eunuchs"!  





Our favorite Stack Overflow question this week is:






  * [What do I need to do in order to be a programmer out at sea?](http://stackoverflow.com/questions/766935/what-do-i-need-to-do-in-order-to-be-a-programmer-out-at-sea) Exhibit A in the eternal close wars. We aren't sure this is a valid programming question, but some people object to it being closed. For that matter, some people object to _anything_ being closed.  






If you'd like to submit a question to be answered in our next episode, record an audio file (90 seconds or less) and mail it to [podcast@stackoverflow.com](mailto:podcast@stackoverflow.com). You can [record a question](http://blog.stackoverflow.com/index.php/2008/05/recording-podcast-questions-using-your-telephone/) using nothing but a telephone and a web browser. We also have a dedicated phone number you can call to leave audio questions at **646-826-3879**.






The [transcript wiki](https://stackoverflow.fogbugz.com/default.asp?W29043) for this episode is available for public editing.

<iframe width="100%" height="166" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/14377371&amp;color=ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false"></iframe>
